// Тема: функции продолжение.


//Координатная плоскость - это плоскость которая задается двумя координатами
//Условность которая позволяет задать место, система двух осей

//четверти в коорд. плоскости... 1,2,3,4
//можно найти расстояние между двумя точками зная их местоположение. Тиорема пифагора.
//за поиск квадрата от числа отвечает отдельный метод

//Math.Pow(a,b) = принимает дле переменные и возводит первую в степень второго, например
//(4,2) = 4 в степени 2

//Math.Sqrt(a) = выводит корень из числа a
// тип данных тут double

//Math.Round(a,b) = округление числа. а = число которое мы хотим округлить
//b = до какой цифры откруглять. чаще всего 2 цифры после запятой
//используем этот метод только перед тем как выводить число пользователю.

//Задача 1.

//Напишите программу, которая по заданному номеру четверти, 
//показывает диапазон возможных координат точек в этой четверти (x и y).


//1 - сначала мы указываем тип данных метода, то что метод будет возвращать
//(int,double,bool,void)
//2 - имя метода( такое чтобы при сворачивании было понятно за что он отвечает)
//3 - () - перечисление аргументов
//  1        2           3
// void ShowDiapazone(int quad)
// {
//     if(quad == 1) Console.WriteLine("x > 0 and y > 0");
//     else if(quad == 2) Console.WriteLine("x < 0 and y > 0");
//     else if(quad == 3) Console.WriteLine("x < 0 and y < 0");
//     else if(quad == 4) Console.WriteLine("x > 0 and y < 0");
//     else Console.WriteLine("Неправильный ввод!");
// }

// Console.Write("Введи номер четверти: ");
// int quadrant = Convert.ToInt32(Console.ReadLine());
// (Console.ReadLine()) - отвечает за запрос данных у пользователя
// Convert.ToInt32 - конвертация в число запрощенных данных
// int quadrant - записали в переменную то что запросили

// ShowDiapazone(quadrant);
// просто вызываем метод чтобы он мог вывести пользователю информацию


//Задача 2
// Напишите программу, которая принимает на вход координаты точки (X и Y), 
// причём X ≠ 0 и Y ≠ 0 и выдаёт номер четверти плоскости, в которой находится эта точка.

// int Coordinate(int x, int y)
// {
//     if(x > 0 && y > 0)
//         return 1;
//     if (x < 0 && y > 0)
//         return 2;
//     if (x < 0 && y < 0)
//         return 3;
//     if (x > 0 && y < 0)
//         return 4;
//     return -1;
// }

// Console.Write("Введите координатy x: ");
// int x = Convert.ToInt32(Console.ReadLine());
// Console.Write("Введите координатy y: ");
// int y = Convert.ToInt32(Console.ReadLine());

// int quarter = Coordinate(x,y);
// if (quarter > 0)
//     Console.Write($"число находится в четверти {quarter}");
// else
//     Console.Write($"Число не находистя в четверти: ");

//В данном случае будет два аргумента(тк принимаем 2 координаты точки) в методе Int
//потому что результатом работы программы будет конкретная величина(число)
// вывод пользователю в основной программе будет

//Задача 3
// Напишите программу, которая принимает на вход координаты двух точек 
//и находит расстояние между ними в 2D пространстве.
// В этой задаче 4 аргумента (тк координаты задаются двумя числами)
//метод Double -  тк расстояние между точками маловероятно будет целым числом

// double GetDistance (double xa, double ya, double xb, double yb)
// {
//     return Math.Sqrt((xb-xa)*(xb-xa) + (yb-ya)*(yb-ya));
// }

// Console.Write("Введите координату Х первой точки: ");
// double xa = Convert.ToDouble(Console.ReadLine());
// Console.Write("Введите координату У первой точки: ");
// double ya = Convert.ToDouble(Console.ReadLine());

// Console.Write("Введите координату Х второй точки: ");
// double xb = Convert.ToDouble(Console.ReadLine());
// Console.Write("Введите координату Y второй точки: ");
// double yb = Convert.ToDouble(Console.ReadLine());


// double Input  = GetDistance(xa, ya, xb, yb);
// Console.WriteLine($"Расстояние между точками равно: " + Math.Round((Input), 2));



//Задача 4
//Напишите программу, которая принимает на вход число (N) 
//и выдаёт таблицу квадратов чисел от 1 до N.
// метод void На вход берет оно целое значение
//организуем цикл и из него выводим данные пользователю

// void square(int n)
// {
//     int currentNum = 1;
//     while(currentNum <= n)
//     {
//         Console.WriteLine(currentNum + "-" + (currentNum*currentNum));
//         currentNum++;
//     }
// }
// Console.Write("Введите число: ");
// int n = Convert.ToInt32(Console.ReadLine());
// if (n > 0)
//     square(n);
// else
//     Console.Write("Введите число больше 0");
